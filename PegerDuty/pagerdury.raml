#%RAML 0.8
---
title: Parse
baseUri: https://acme.pagerduty.com/api/{version}
version: v1
mediaType: application/json
securitySchemes:
  - basic: !include securitySchemas/basic.raml
  - basic: !include securitySchemas/tokenSchema.raml

schemas:
  - alerts: !include schemas/alerts.json
  - escalationPoliciesQuery: !include schemas/escalationPoliciesQuery.json
  - escalationPolicyPost: !include schemas/escalationPolicyPost.json
  - escalationPolicyCreated: !include schemas/escalationPolicyCreated.json
  - escalationPolicyGet: !include schemas/escalationPolicyGet.json
  - escalationPolicyGet: !include schemas/escalationPolicyPut.json
  - escalationRulesQuery: !include schemas/escalationRulesQuery.json
  - escalationRulesPostBody: !include schemas/escalationRulesPostBody.json
  - escalationRulesPostResponse: !include schemas/escalationRulesPostResponse.json
  - escalationRulesPutBody: !include schemas/escalationRulesPutBody.json
  - escalationRulesPutResponse: !include schemas/escalationRulesPutResponse.json
  - escalationRulesPostBody: !include schemas/escalationRulesPostBody.json
  - escalationRuleGet: !include schemas/escalationRuleGet.json
  - incidentsQuery: !include schemas/incidentsQuery.json
  - incidentsPutBody: !include schemas/incidentsPutBody.json
  - incidentsPutResponse: !include schemas/incidentsPutResponse.json
  - incidentGet: !include schemas/incidentGet.json
  - incidentsCount: !include schemas/incidentsCount.json
  - notesGet: !include schemas/notesGet.json
  - notesPostBody: !include schemas/notesPostBody.json
  - notesPostResponse: !include schemas/notesPostResponse.json
  - logEntriesQuery: !include schemas/logEntriesQuery.json
  - logEntry: !include schemas/logEntry.json
  - logEntriesForIncident: !include schemas/logEntriesForIncident.json
  - logEntriesForUser: !include schemas/logEntriesForUser.json
  - reportsIncidentsPerTime: !include schemas/jsonreportsIncidentsPerTime.json
  - reportsAlertsPerTime: !include schemas/jsonreportsAlertsPerTime.json

traits:
  - requiresDateLimits: !include traits/requiresDateLimits.raml
  - paginated: !include traits/paginated.raml

resourceTypes:
  - pagerDutyResource: !include resourceTypes/pagerDutyResource.raml

/alerts:
  type: pagerDutyResource
  description: |
    When an incident is triggered or when it is escalated it creates an alert (also known as a notification).
    Alerts are messages containing the details of the incident, and can be sent through SMS,
    email, phone calls, and push notifications.
    This API allows you to access read-only data regarding what alerts have been sent to your users.
  
  get:
    description: List existing alerts for a given time range, optionally filtered by type (SMS, Email, Phone, or Push).
    
    is: [ requiresDatelimits paginated ]
    body:
      application/x-www-form-urlencoded:
        formParameters:
          filter[type]:
            description: Returns only the alerts of the said types.
            enum: [ SMS, Email, Phone, Push ]
            required: false
          time_zone:
            description: Time zone in which dates in the result will be rendered. Defaults to account time zone.
            required: false
            
    response:
      200:
        body:
          schema: alerts
          example: !include examples/alerts.json
          
/escalation_posicies:
  type: pagerDutyResource
  description: This API lets you access and manipulate escalation policies and rules.
  
  get:
    is: [ paginated ]
    description: List existing escalation policies.
    body:
      application/x-www-form-urlencoded:
        formParameters:
          query:
            description: Filters the result, showing only the escalation policies whose names match the query.
            required: false
            
    response:
      200:
        body:
          schema: escalationPoliciesQuery
          example: !include examples/escalationPoliciesQuery.json

  post:
    description: Create a new escalation policy.
    body:
      schema: escalationPolicyPost
      example: !include examples/escalationPolicyPost.json
      
    responses:
      201:
        body:
          schema: escalationPolicyCreated
          example: !include examples/escalationPolicyCreated.json
    
  /{escalation_posicy_id}:
    type: pagerDutyResource

    get:
      description: Get details about an escalation policy.
      responses:
        200:
          body:
            schema: escalationPolicyGet
            example: !include examples/escalationPolicyGet.json
      
    put:
      description: Update an escalation policy.
      body:
        schema: escalationPolicyPut
        example: !include examples/escalationPolicyPut.json
        
    delete:
      description: Delete an escalation policy.
      responses:
        204:
    
    /escalation_rules:
      type: pagerDutyResource

      description:  This API lets you access and manipulate escalation rules of an existing escalation policy.
      get:
        description: List escalation rules for an escalation policy.
        body:

        responses:
          200:
            body:
              schema: escalationRulesQuery
              example: !include examples/escalationRulesQuery.json
                
      post:
        description: Creates a new escalation rule for an escalation policy and appends it to the end of the existing escalation rules.
        body:
          schema: escalationRulesPostBody
          example: !include examples/escalationRulesPostBody.json
          
        responses:
          201:
            body:
              schema: escalationRulesPostResponse
              example: !include examples/escalationRulesPostResponse.json
                
      put:
        description: Updates the entire collection of escalation rules.
        body:
          schema: escalationRulesPutBody
          example: !include examples/escalationRulesPutBody.json
          
        responses:
          200:
            body:
              schema: escalationRulesPutResponse
              example: !include examples/escalationRulesPutResponse.json
                
      /{escalation_rule_id}:
        type: pagerDutyResource
        get:
          description: Get details about an escalation rule.

          responses:
            200:
              body:
                schema: escalationRuleGet
                example: !include examples/escalationRuleGet.json
        put:
          description: Update an escalation rule.
          body:
            schema: escalationRulePutBody
            example: !include examples/escalationRulePutBody.json
          
          responses:
            200:
              body:
                schema: escalationRulePutResponse
                example: !include examples/escalationRulePutResponse.json
              
        delete:
          description: Delete an escalation rule.          
          responses:
            204:

/incidents:
  type: pagerDutyResource  
  description: This API lets you access and manipulate incidents.

  get:
    is: [ paginated ]
    description: List existing incidents.
    body:
      application/x-www-form-urlencoded:
        formParameters:
          date_range:
            description: |
              When set to all, the since and until parameters and defaults are ignored.
              Use this to get all incidents since the account was created.
          fields:
            description: |
              Used to restrict the properties of each incident returned to a set of pre-defined fields.
              If omitted, returned incidents have all fields present. See below for a list of possible fields.
          status:
            description: |
              Returns only the incidents currently in the passed status(es).
              Valid status options are triggered, acknowledged, and resolved.
              More status codes may be introduced in the future.
              Separate multiple statuses with a comma.
          incident_key:
            description: |
              Only counts the incidents with the passed de-duplication key.
              See the PagerDuty Integration API docs for further details.
          service:
            description: |
              Returns only the incidents associated with the passed service(s).
              This expects one or more service IDs. Separate multiple ids with a comma.
          assigned_to_user:
            description: |
              Returns only the incidents currently assigned to the passed user(s).
              This expects one or more user IDs. Please see below for more info on how to find your users' IDs.
              When using the assigned_to_user filter, you will only receive incidents with statuses of triggered or acknowledged.
              This is because resolved incidents are not assigned to any user. Separate multiple ids with a comma.
          time_zone:
            description: Time zone in which dates in the result will be rendered. Defaults to UTC.
          sort_by:
            description: |
              Used to specify both the field you wish to sort the results on,
              as well as the direction (ascending/descending) of the results.
              |               |                                           |
              |---------------|-------------------------------------------|              
              |incident_number| The number of your incident.              |
              |created_on     | The date/time the incident was triggered. |
              |resolved_on    |The date/time the incident was resolved.   |
              Valid values
              |    |                                          |
              |----|------------------------------------------|
              |asc |This sorts ascending (default if omitted).|
              |desc|This sorts descending.                    |
              The sort_by field and direction should be separated by a colon.
              enum: [ incident_number:asc, incident_number:desc, created_on:asc, created_on:desc, resolved_on:asc, resolved_on:desc ]
              example: | 
                {
                   "sort_by": "created_on:desc"
                }

    responses:
      200:
        body:
          schema: incidentsQuery
          example: !include examples/incidentsQuery.json

  put:
    description: Acknowledge, resolve, escalate or reassign one or more incidents.
    body:
      schema: incidentsPutBody
      example: !include examples/incidentsPutBody.json
       
    responses:
      200:
        body:
          schema: incidentsPutResponse
          example: !include examples/incidentsPutResponse.json
  
  /count:
    type: pagerDutyResource
    get:
      is: [ paginated ]
      description: Count the number of incidents matching certain criteria.
      body:
        application/x-www-form-urlencoded:
          formParameters:
            date_range:
              description: |
                When set to all, the since and until parameters and defaults are ignored.
                Use this to get all counts since the account was created.
            status:
              description: |
                Only counts the incidents currently in the passed status(es).
                Valid status options are triggered, acknowledged, and resolved.
                More status codes may be introduced in the future.
                Separate multiple statuses with a comma.
            incident_key:
              description: |
                Only counts the incidents with the passed de-duplication key.
                See the PagerDuty Integration API docs for further details.
            service:
              description: |
                Only counts the incidents associated with the passed service(s).
                This is expecting one or more service IDs. Separate multiple ids with a comma.
            assigned_to_user:
              description: |
                Only counts the incidents currently assigned to the passed user(s).
                This is expecting one or more user IDs.
                When using the assigned_to_user filter, you will only count incidents with statuses of triggered or acknowledged.
                This is because resolved incidents are not assigned to any user. Separate multiple ids with a comma.

      responses:
        200:
          body:
            schema: incidentsCount
            example: !include examples/incidentsCount.json

  /{id}:
    type: pagerDutyResource
    uriParameters:
      id:
        description: Either incident id or incident number may be used as parameter's value.
        example: |
          https://acme.pagerduty.com/api/v1/incidents/PIJ90N7
          
          https://acme.pagerduty.com/api/v1/incidents/1      
    get:
      description: Show detailed information about an incident. Accepts either an incident id, or an incident number.

      responses:
        200:
          body:
            schema: incidentGet
            example: !include examples/incidentGet.json
            
    /resolve:
      type: pagerDutyResource
      put:
        description: Resolve an incident.
        body:
          application/x-www-form-urlencoded:
            formParameters:
              requester_id:
                description: |
                  The user id of the user making the request.
                  This will be added to the incident log entry.
                  This is only needed if you are using token based authentication.
        responses:
          200:
          
    /acknowledge:
      type: pagerDutyResource
      put:
        description: Acknowledge an incident.
        body:
          application/x-www-form-urlencoded:
            formParameters:
              requester_id:
                description: |
                  The user id of the user making the request.
                  This will be added to the incident log entry.
                  This is only needed if you are using token based authentication.
        responses:
          200:
    /reassign:
      type: pagerDutyResource
      put:
        description: |
          Reassign an incident.
        body:
          application/x-www-form-urlencoded:
            formParameters:
              requester_id:
                description: |
                  The user id of the user making the request.
                  This will be added to the incident log entry.
                  This is only needed if you are using token based authentication.
              escalation_level:
                type: integer
                description: Escalate incident to this level in the escalation policy.
              assigned_to_user:
                description: Assign this incident to the specified user id.
        
        responses:
          200:

    /notes:
      type: pagerDutyResource
      description: The Incident Notes API allows you to add notes to a specified incident.
      get:
        description: List existing notes for the specified incident.
        
        responses:
          200:
            body:
              schema: notesGet
              example: !include examples/notesGet.json
      post:
        description: Create a new note for the specified incident.
        body:
          schema: notesPostBody
          example: !include examples/notesPostBody.json
              
        responses:
          201:
            body:
              schema: notesPostResponse
              example: !include examples/notesPostResponse.json
    /log_entries:
      type: pagerDutyResource
      get:
        description: |
          List all incident log entries for a specific incident.
        body:
          application/x-www-form-urlencoded:
            formParameters:
              time_zone:
                type: time zone
                description: Time zone in which dates in the result will be rendered. Defaults to UTC
              since:
                description: The start of the date range over which you want to search.
              until:
                description: The end of the date range over which you want to search.
              is_overview:
                type: boolean
                description: If true, will only return log entries of type trigger, acknowledge, or resolve. Defaults to false.
              include:
                description: |
                  Array of additional details to include. This API accepts channel, incident, and service.
                  If channel is not included, a summary will be returned (See channel format information for more information.)
                example: "include[]=contact_methods&include[]=notification_rules"

        responses:
          200:
            body:
              schema: logEntriesForIncident
              example: !include examples/logEntriesForIncident.json
              
/log_entries:
  type: pagerDutyResource
  description: |
    PagerDuty keeps a log of all the events that happen to an incident.
    The following APIs provide fine-grained access to this incident log entry data to give you more insight
    into how your team or organization is handling your incidents.
    Log entry data includes details about the event(s) that triggered the incident, who was notified and when,
    how they were notified, and who acknowledged or resolved it, amongst a few other things.
  get:
    is: [ paginated ]
    description: List all incident log entries across the entire account.
    body:
      application/x-www-form-urlencoded:
        formParameters:
          time_zone:
            description: Time zone in which dates in the result will be rendered. Defaults to UTC
          since:
            description: The start of the date range over which you want to search.
          until:
            description: The end of the date range over which you want to search.
          is_overview:
            type: boolean
            description: If true, will only return log entries of type trigger, acknowledge, or resolve. Defaults to false.
          include:
            description: |
              Array of additional details to include. This API accepts channel, incident, and service.
              If channel is not included, a summary will be returned (See channel format information for more information.)
            example: "include[]=contact_methods&include[]=notification_rules"              

    responses:
      200:
        body:
          schema: logEntriesQuery
          example: !include examples/logEntriesQuery.json

  /{id}:
    type: pagerDutyResource
    get:
      description: |
        Get details for a specific incident log entry. This method provides additional information you can use to get at raw event data.
      body:
        application/x-www-form-urlencoded:
          formParameters:
            time_zone:
              description: Time zone in which dates in the result will be rendered. Defaults to UTC
            include:
              type: array
              description: |
                Array of additional details to include. This API accepts channel, incident, and service.
                If channel is not included, a summary will be returned (See channel format information for more information.)
              example: "include[]=contact_methods&include[]=notification_rules"

      responses:
        200:
          body:
            schema: logEntry
            example: !include examples/logEntry.json              

/maintenance_windows:
  type: pagerDutyResource
  description: Maintenance windows allow you to schedule service maintenance periods, during which no incidents will be created.
  get:
    description: List existing maintenance windows, optionally filtered by service, or whether they are from the past, present or future.
    body:
      application/x-www-form-urlencoded:
        formParameters:
          query:
            description: Filters the results, showing only the maintenance windows whose descriptions contain the query.
          service_ids:
            description: An array of service IDs, specifying services whose maintenance windows shall be returned.
            examaple: "service_ids[]=PF9KMXH&service_ids[]=qwerty"
            
          filter:
            description: |
              Only return maintenance windows that are of this type.
              Possible values are past, future, ongoing. If this parameter is omitted, all maintenance windows will be returned.

    responses:
      200:
        body:
          schema: maintenanceWindowsQuery
          example: !include examples/maintenanceWindowsQuery.json
            
  post:
    description: |
      Create a new maintenance window for the specified services.
      No new incidents will be created for a service that is currently in maintenance.
    body:
      schema: maintenanceWindowPostBody
      example: !include examples/maintenanceWindowPostBody.json
      
    responses:
      200:
        body:
          schema: maintenanceWindowPostResponse
          example: !include examples/maintenanceWindowPostResponse.json
            
  /{id}:
    type: pagerDutyResource
    
    get:
      description: Get details about an existing maintenance window.

      responses:
        200:
          body:
            schema: maintenanceWindowGet
            example: !include examples/maintenanceWindowGet.json
              
    put:
      description: Update an existing maintenance window.
      body:
        schema: maintenanceWindowPutBody
        example: !include examples/maintenanceWindowPutBody.json
      
      responses:
        200:
          body:
            schema: maintenanceWindowPutResponse
            example: !include examples/maintenanceWindowPutResponse.json

    delete:
      description: Cancel or delete an existing maintenance window.

      responses:
        204:

/reports/incidents_per_time:
  type: pagerDutyResource  
  description: Access high level reports about alerts and incidents. Useful for creating graphs.
  
  get:
    is: [ paginated ]
    
    description: |
      Get high level statistics about the number of alerts (SMSes, phone calls and emails)
      sent for the desired time period, summed daily, weekly or monthly.
    body:
      application/x-www-form-urlencoded:
        formParameters:
          rollup:
            description: |
              Possible values are daily, weekly or monthly.
              Specifies the bucket duration for each summation.
              Defaults to monthly.
              For example, A time window of two years (based on since and until) with a rollup of monthly
              will result in 24 sets of data points being returned (one for each month in the span).

    responses:
      200:
        body:
          schema: reportsIncidentsPerTime
          example: !include examples/reportsIncidentsPerTime.json
            
            
/reports/alerts_per_time:

  get:
    is: [ paginated ]
    description: Get high level statistics about the number of incidents created for the desired time period, summed daily, weekly or monthly.
    
    body:
      application/x-www-form-urlencoded:
        formParameters:
          since:
            description: The start of the date range over which you want to search. The time element is optional.
            required: true
          until:
            description: The end of the date range over which you want to search. This should be in the same format as since.
            required: true
          rollup:
            description: |
              Possible values are daily, weekly or monthly.
              Specifies the bucket duration for each summation.
              Defaults to monthly.
              For example, A time window of two years (based on since and until) with a rollup of monthly
              will result in 24 sets of data points being returned (one for each month in the span).

    responses:
      200:
        body:
          schema: reportsAlertsPerTime
          example: !include examples/reportsAlertsPerTime.json
            
          

          
/users:
  type: pagerDutyResource
  
  /{user_id}:
    type: pagerDutyResource
    
    /log_entries:
      type: pagerDutyResource
      
      get:
        description: List all incident log entries that describe interactions with a specific user.
        body:
          application/x-www-form-urlencoded:
            formParameters:
              time_zone:
                description: Time zone in which dates in the result will be rendered. Defaults to UTC
              since:
                description: The start of the date range over which you want to search.
              until:
                description: The end of the date range over which you want to search.
              is_overview:
                type: boolean
                description: If true, will only return log entries of type trigger, acknowledge, or resolve. Defaults to false.
              include:
                description: |
                  Array of additional details to include. This API accepts channel, incident, and service.
                  If channel is not included, a summary will be returned (See channel format information for more information.)
                example: "include[]=contact_methods&include[]=notification_rules"

        responses:
          200:
            body:
              schema: logEntriesForUser
              example: !include examples/logEntriesForUser.json

